type Comment @model @auth(rules: [{allow: public}]) {
  id: ID!
  createdAt: AWSDateTime!
  comment: String!
  userID: ID! @index(name: "byUser")
  postID: ID! @index(name: "byPost", queryField: "commentsByPost", sortKeyFields: ["createdAt"])
  User: User @belongsTo(fields: ["userID"])
  Post: Post @belongsTo(fields: ["postID"])
}

type Post @model @auth(rules: [{allow: public}]) {
  id: ID!
  createdAt: AWSDateTime!
  type: String! @index(name: "postsByDate", queryField: "postsByDate", sortKeyFields: ["createdAt"])
  title: String!
  price: String!
  adress: String!
  User: User @belongsTo(fields: ["userID"])
  Comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
  description: String!
  userID: ID! @index(name: "byUser")
  lat: String
  long: String
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  email: String!
  name: String
  location: String
  image: String
  phoneNumber: String
  employer: Boolean!
  about: String
  Posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
  Comments: [Comment] @hasMany(indexName: "byUser", fields: ["id"])
}
